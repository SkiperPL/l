[null,{"name":"Powitania","temp":"memberjoined","event-type":"6","_id":"rhFtO","actions":[{"info":"0","find":"746343257830719578","storage":"1","varName":"welcomechannel","name":"Find Channel"},{"member":"2","varName":"memberjoined","info":"1","storage":"1","varName2":"memberjoinedid","name":"Store Member Info"},{"channel":"5","varName":"welcomechannel","message":"Cześć <@${tempVars(\"memberjoinedid\")}>! Witaj na serwerze **Heheszki Skipera**!\nPrzeczytaj <#746145384556134511> oraz <#746489918813110463> i się  z nimi zapoznaj\nChcesz zobaczyć wszystkie rangi i ich opisy? Wejdź na <#746357660709945354>!\nJeśli nie wiesz do czego służy dany kanał, zobacz <#746363118644363414>!","storage":"0","varName2":"","name":"Send Message"}]},{"name":"Log Each","temp":"","event-type":"0","_id":"nVuHD","actions":[{"storage":"1","varName":"loge","info":"1","position":"","storage2":"1","varName2":"logac","name":"Store Audit Log Info MOD"},{"storage":"1","varName":"loge","info":"3","position":"","storage2":"1","varName2":"logta","name":"Store Audit Log Info MOD"},{"storage":"1","varName":"loge","info":"2","position":"","storage2":"1","varName2":"logex","name":"Store Audit Log Info MOD"},{"storage":"1","varName":"loge","info":"5","position":"","storage2":"1","varName2":"logdat","name":"Store Audit Log Info MOD"},{"storage":"1","varName":"loge","info":"4","position":"","storage2":"1","varName2":"logtt","name":"Store Audit Log Info MOD"},{"member":"2","varName":"logex","info":"21","storage":"1","varName2":"logextag","name":"Store Member Info"},{"member":"2","varName":"logex","info":"1","storage":"1","varName2":"logexid","name":"Store Member Info"},{"storage":"2","varName":"logembed","fieldName":"${tempVars(\"logextag\")} - ${tempVars(\"logexid\")}","message":"${tempVars(\"logac\")}\n${tempVars(\"logta\")}\n${tempVars(\"logdat\")}\n${tempVars(\"logtt\")}","inline":"1","name":"Add Embed Field"},{"comment":"<bold>Dobra, ja już kończę. Idę na lekcje!</bold>","color":"#0080c0","name":"Comment"}]},{"name":"Bot Status","temp":"10","event-type":"1","_id":"HkDQm","actions":[{"activity":"2","nameText":"http://www.heheszki-skipera.mozello.com","url":"","stat":"0","name":"Set Bot Activity"},{"time":"8","measurement":"1","name":"Wait"},{"activity":"1","nameText":"!help","url":"","stat":"0","name":"Set Bot Activity"},{"time":"8","measurement":"1","name":"Wait"},{"activity":"3","nameText":"kanał Skiper_pl","url":"https://twitch.tv/skiper___pl","stat":"0","name":"Set Bot Activity"},{"time":"8","measurement":"1","name":"Wait"},{"call":"1","name":"Jump to Action"}]},{"name":"Poll Emote","temp":"","event-type":"0","_id":"lxGGf","actions":[{"message":"2","varName":"pmsg","info":"0","storage":"1","varName2":"tpmsg","name":"Store Message Info"},{"storage":"1","varName":"tpmsg","emoji":"4","varName2":"${tempVars(\"rtr\")}","varName3":"","name":"Add Reaction"}]},{"name":"LevelUpEvent","temp":"","event-type":"0","_id":"mixxk","actions":[{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"5","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Turysta(5LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"10","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Okoliczny(10LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"15","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Mieszkaniec(15LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"20","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Pracownik(20LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"25","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Kozaczek(25LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"30","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Geniusz(30LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"35","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Dealer aut(35LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"50","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Kierownik(50LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"60","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"Boss(60LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"75","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"No nieźle!(75LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"90","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"ŁOOO PANIE!!(90LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"},{"name":"End Action Sequence"},{"member":"4","varName":"lum","dataName":"level","comparison":"1","value":"100","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check Member Data"},{"info":"1","find":"CO KU*WA?!?(100LVL+)","storage":"1","varName":"rtg","name":"Find Role"},{"member":"4","varName2":"lum","role":"3","varName":"rtg","reason":"","name":"Add Member Role"}]},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"code":"if (globalVars(\"RoleReactionMenuAlreadyRan\") == null) {\n    const Discord = require(\"discord.js\");\n    const path = require(\"path\");\n    Actions.storeValue(true, 3, \"RoleReactionMenuAlreadyRan\", cache);\n\n    if(globalVars(\"installedStenoRequest\") == null) {\n        Actions.storeValue(true, 3, \"installedStenoRequest\", cache);\n\n        try {\n            require.resolve(\"request\");\n            require.resolve(\"graceful-fs\");\n            require.resolve(\"steno\");\n        } catch(e) {\n            console.log(\"Required NPM modules not found!\\n\\nInstalling modules..\");\n            var child_process = require('child_process');\n            child_process.execSync('npm install steno request graceful-fs',{stdio:\"pipe\"});\n            console.log(\"NPM Module Installation Complete\")\n        }\n        console.log(\"NPM Module Check Complete\\n\")\n    }\n\n    const request = require('request');\n    const fs = require('graceful-fs');\n    const steno = require('steno')\n\n    //Settings\n    const dmUserAfter = true; // Default: true, can be changed to false\n    var messageSentAdd = 'Successfully added the role {rolename} in {server}';\n    var messageSentRemove = 'Successfully removed the role {rolename} in {server}';\n    var debug = false; // Default: false, can be changed to true\n    var checkUpdates = true;\n    // The only variables that work rn, {rolename} and {server}\n\n    var requiredIntents = [\"GUILDS\",\"GUILD_MEMBERS\",\"GUILD_MESSAGE_REACTIONS\",\"GUILD_MESSAGES\"];\n    var intentCheck = new Discord.Intents(DBM.Bot.intents()).toArray();\n    requiredIntents.forEach(intent => {\n        if (!intentCheck.includes(intent)) {\n            console.log(`[Role Reaction] You don't have the ${intent} intent enabled!`)\n        }\n    })\n\n    if (checkUpdates) {\n        request('https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Role%20Reaction%20Menu/versionCheck.json', function(error, response, body) {\n            if (response.statusCode == 200) {\n                var allVersions = JSON.parse(body);\n\n                var commandVersions = {};\n                var eventVersions = {};\n                var commandKeys = [];\n                var eventKeys = [];\n\n                allVersions[\"commands\"].forEach(commandVer => {\n                    commandVersions[commandVer[0]] = commandVer[1];\n                    commandKeys.push(commandVer[0]);\n                });\n\n                allVersions[\"events\"].forEach(eventVer => {\n                    eventVersions[eventVer[0]] = eventVer[1];\n                    eventKeys.push(eventVer[0])\n                })\n\n                fs.readFile(\"./data/commands.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemCommands = await data.filter(command => command != null && commandKeys.includes(command[\"_id\"]));\n\n                    for (i = 0; i < systemCommands.length; i++) {\n                        var systemActionFind = await systemCommands[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemActionFind.length != 0) {\n                            var versionCheckSplit = systemActionFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit[1] != null && versionCheckSplit[1] != commandVersions[systemCommands[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Role Reaction] The command ${systemCommands[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n\n                fs.readFile(\"./data/events.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemEvent = await data.filter(event => event != null && eventKeys.includes(event[\"_id\"]));\n\n                    for (i = 0; i < systemEvent.length; i++) {\n                        var systemEventFind = await systemEvent[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemEventFind.length != 0) {\n                            var versionCheckSplit = systemEventFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit != null && versionCheckSplit[versionCheckSplit.length - 1] != eventVersions[systemEvent[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Role Reaction] The event ${systemEvent[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n            }\n        });\n    }\n\n    /*\n    if (globalVars(\"reactionRoleMoved\") == null) {\n        Files.saveGlobalVariable(\"reactionRoleMoved\", true);\n\n        var dataPath = path.normalize(\"./data/roleReaciton\")\n\n        if (!fs.existsSync(`./data/roleReaciton`)) {\n            fs.mkdirSync(`./data/roleReaciton`);\n        }\n\n        [\"reactionRoleData\"].forEach(fileName => {\n            if (fs.existsSync(`./data/${fileName}.json`)) {\n                fs.renameSync( `./data/${fileName}.json`, `./data/roleReaciton/${fileName}.json`);\n            }\n        });\n    }\n    */\n\n    var dataFolder = path.normalize(\"./data/roleReaciton\");\n    var dataFile = path.normalize(\"./data/roleReaciton/reactionRoleData.json\");\n\n    if (!fs.existsSync(dataFolder)) {\n        fs.mkdirSync(dataFolder);\n    }\n\n    if (fs.existsSync(dataFile)) {\n        fs.readFile(dataFile, function read(err, data) {\n            if (err) {\n                throw err;\n            }\n            data = JSON.parse(data)\n\n            Actions.storeValue(data, 3, 'reactionRoleInf', cache);\n        });\n    } else {\n        fs.writeFile(dataFile, \"{}\", function(err) {\n            if (err) {\n                return console.log(err);\n            }\n        });\n        Actions.storeValue({}, 3, 'reactionRoleInf', cache);\n    }\n\n    client.on('messageReactionAdd', async function(reaction, user) {\n        user = await user;\n\n        if (user == null) {\n            console.log(\"Role reaction error: User is not defined! Please make sure you have followed the new setup for intents to allow this command to work!\");\n        } else {\n            if (!user.bot && reaction != null) {\n                const reactionData = globalVars(\"reactionRoleInf\");\n                const reactionGuild = reaction.message.guild;\n                const reactionMessage = reaction.message;\n                if (reactionData.hasOwnProperty(reactionMessage.id)) {\n                    var emojiName = reaction.emoji.name;\n                    var roleInData = await reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n                    if (roleInData.length != 0) {\n                        var guilduser = await reactionGuild.members.cache.get(user.id);\n                        var roleData = roleInData[0][1];\n\n                        if (!guilduser.roles.cache.has(roleData)) {\n                            var reactionRole = await reactionGuild.roles.cache.get(roleData);\n\n                            guilduser.roles.add(reactionRole)\n                                .catch(function(error) {\n                                    guilduser.send(\"Sorry! I couldn't add the role due to either permission issues or the role's position may be higher than my highest role's position. Please contact an adminstrator about this issue.\")\n                                        .catch(function(error) {\n                                            if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                                console.log(error);\n                                            } else if (debug) {\n                                                console.log(`Unable to send user a message || ${guilduser.name}`)\n                                            }\n                                        });\n                                    if (debug) {\n                                        console.log(error);\n                                    }\n                                });\n\n\n                            if (dmUserAfter) {\n                                guilduser.send(messageSentAdd.replace(\"{rolename}\", `**${reactionRole.name}**`).replace(\"{server}\", `**${reactionGuild.name}**`))\n                                    .catch(function(error) {\n                                        if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                            console.log(error);\n                                        } else if (debug) {\n                                            console.log(`Unable to send user a message || ${guilduser.name}`)\n                                        }\n                                    });\n                            }\n\n                        }\n                    }\n                }\n            }\n        }\n\n    });\n\n    client.on('messageReactionRemove', async function(reaction, user) {\n        user = await user;\n\n        if (user == null) {\n            console.log(\"Role reaction error: User is not defined! Please make sure you have followed the new setup for intents to allow this command to work!\");\n        } else {\n            if (!user.bot) {\n                const reactionData = globalVars(\"reactionRoleInf\");\n                const reactionGuild = reaction.message.guild\n                const reactionMessage = reaction.message;\n                if (reactionData.hasOwnProperty(reactionMessage.id)) {\n                    var emojiName = reaction.emoji.name;\n                    var roleInData = await reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n                    if (roleInData.length != 0) {\n                        var guilduser = await reactionGuild.members.cache.get(user.id);\n                        var roleData = roleInData[0][1];\n\n                        if (guilduser.roles.cache.has(roleData)) {\n                            var reactionRole;\n                            reactionRole = await reactionGuild.roles.cache.get(roleData);\n\n                            guilduser.roles.remove(reactionRole)\n                                .catch(function(error) {\n                                    guilduser.send(\"Sorry! I couldn't remove the role due to either permission issues or the role's position may be higher than my highest role's position. Please contact an adminstrator about this issue.\")\n                                        .catch(function(error) {\n                                            if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                                console.log(error);\n                                            } else if (debug) {\n                                                console.log(`Unable to send user a message || ${guilduser.name}`)\n                                            }\n                                        });\n                                    if (debug) {\n                                        console.log(error);\n                                    }\n                                });\n\n                            if (dmUserAfter) {\n                                guilduser.send(messageSentRemove.replace(\"{rolename}\", `**${reactionRole.name}**`).replace(\"{server}\", `**${reactionGuild.name}**`))\n                                    .catch(function(error) {\n                                        if (error != \"DiscordAPIError: Cannot send messages to this user\" && debug) {\n                                            console.log(error);\n                                        } else if (debug) {\n                                            console.log(`Unable to send user a message || ${guilduser.name}`)\n                                        }\n                                    });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    client.on('messageDelete', async function(message) {\n        const reactionData = globalVars(\"reactionRoleInf\");\n\n        if(reactionData.hasOwnProperty(message.id)) {\n            delete reactionData[message.id]\n            Actions.storeValue(reactionData, 3, \"reactionRoleInf\", cache);\n            steno.writeFile(dataFile, JSON.stringify(reactionData), function(err) {\n                if (err) {\n                    return console.log(err);\n                }\n            });\n        }\n    })\n}\n\n// VersionCheck:8","behavior":"0","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"}]},{"name":"giveawayCheck","temp":"10","event-type":"3","_id":"eavvT","actions":[{"code":"const fs = require('fs');\nlet giveawaysDue = [];\nvar timeNow = Math.floor(Date.now() / 1000);\nvar counter = 0;\nvar interval;\nif (globalVars(\"giveawayRan\") == null) {\n    Actions.storeValue(1, 3, \"giveawayRan\", cache);\n\n    var giveawaySysData = Actions.giveawaySystem;\n\n    for (var key in giveawaySysData) {\n        if (giveawaySysData.hasOwnProperty(key)) {\n            let giveaways = giveawaySysData[key];\n            let dueGive = giveaways.filter(({\n                finishUnix\n            }) => finishUnix <= timeNow);\n            if (dueGive.length > 0) {\n                dueGive.forEach(async f => {\n                    giveawaysDue.push(f);\n                    giveaways.splice(giveaways.findIndex(e => e.id === f.id), 1)\n                });\n\n                fs.writeFile(\"./data/giveawaySystem/giveawayData.json\", JSON.stringify(giveawaySysData), function(err) {\n                    if (err) {\n                        return console.log(err);\n                    }\n                });\n            }\n        }\n    }\n    if (giveawaysDue.length > 0) {\n        interval = setInterval(drawWinners, 2000);\n    }\n\n}\n\nasync function drawWinners() {\n    var preCount = counter;\n    var channelToFetch = client.channels.cache.get(giveawaysDue[preCount][\"channel\"]);\n    if (channelToFetch != null) {\n        channelToFetch.messages.fetch(giveawaysDue[preCount][\"giveawayMessageID\"]).then(giveawayMessage => {\n            var giveawayEmojiCache = giveawayMessage.reactions.cache.get('🎉');\n            giveawayEmojiCache.users.fetch().then(async function(giveawayUsers) {\n                if (giveawayEmojiCache.count > 100) {\n                    for (i = 0; i < giveawayEmojiCache.count; i++) {\n                        var fetchedEmojiUsers = await giveawayEmojiCache.users.fetch({\n                            after: giveawayUsers.last().id\n                        });\n                        await giveawayUsers.concat(fetchedEmojiUsers);\n                    }\n                }\n\n                giveawayUsers = giveawayUsers.array();\n                giveawayUsers = await giveawayUsers.filter(object => object.id != client.user.id);\n                var numberOfWinners = parseInt(giveawaysDue[preCount][\"winner\"]);\n                var gw = giveawayMessage.embeds[0];\n\n                gw.color = 0x000000;\n                if (gw.fields.length == 6) {\n                    gw.fields[5].value = \"Zakończony\"\n                }\n                gw.description = \"**Giveaway Zakończony**\\n\\n\" + gw.description\n\n                var winnerArray = [];\n                var winnerText = \"\";\n                if (giveawayUsers.length > 0) {\n                    if (giveawayUsers.length > numberOfWinners) {\n                        for (var i = 0; i < numberOfWinners; i++) {\n                            var randomNumber = Math.floor(Math.random() * giveawayUsers.length);\n                            winnerArray.push(`${giveawayUsers[randomNumber]}`);\n                            giveawayUsers.splice(giveawayUsers.indexOf(randomNumber), randomNumber);\n                        }\n                    } else if (giveawayUsers.length <= numberOfWinners) {\n                        for (i = 0; i < giveawayUsers.length; i++) {\n                            winnerArray.push(`${giveawayUsers[i]}`);\n                        }\n                    }\n\n                    for (i = 0; i < winnerArray.length; i++) {\n                        winnerText = winnerText + winnerArray[i] + '\\n';\n                    }\n\n                    gw.description += `\\n\\nZwycięscy to..\\n${winnerText}`;\n                    giveawayMessage.edit({\n                        embed: gw\n                    });\n                    channelToFetch.send(`🎉 Gratulacje! 🎉 \\n ${winnerText} \\nWygrali **${giveawaysDue[preCount][\"itemGivingAway\"]}**`);\n\n                } else {\n                    gw.description += \"\\n\\nNikt nie uczestniczyl w giveawayu, nikt nie wygral.\";\n                    giveawayMessage.edit({\n                        embed: gw\n                    });\n                    channelToFetch.send(`🎉 Giveaway Zakończony 🎉\\n\\nNikt nie uczestniczyl w giveawayu, nikt nie wygral.`);\n                }\n            })\n        })\n    }\n    \n    counter += 1;\n    if (counter >= giveawaysDue.length) {\n        clearInterval(interval);\n    }\n}\n\n// VersionCheck:2","behavior":"0","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"},{"time":"7","measurement":"1","name":"Wait"},{"storage":"3","varName":"giveawayRan","changeType":"0","value":"null","name":"Control Variable"}],"temp2":"America/New_York"},{"name":"giveawayStart","temp":"","event-type":"1","_id":"jEKcf","actions":[{"behavior":"0","interpretation":"1","code":"if (globalVars(\"giveawayStartAlreadyRan\") == null) {\n\n    Actions.storeValue(true, 3, \"giveawayStartAlreadyRan\", cache);\n\n    const fs = require('fs');\n    const request = require('request');\n    const Files = Actions.getDBM().Files;\n    var checkUpdates = true;\n\n    if (checkUpdates) {\n        request('https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Giveaway%20Rewritten/versionCheck.json', function(error, response, body) {\n            if (response.statusCode == 200) {\n                var allVersions = JSON.parse(body);\n\n                var commandVersions = {};\n                var eventVersions = {};\n                var commandKeys = [];\n                var eventKeys = [];\n\n                allVersions[\"commands\"].forEach(commandVer => {\n                    commandVersions[commandVer[0]] = commandVer[1];\n                    commandKeys.push(commandVer[0]);\n                });\n\n                allVersions[\"events\"].forEach(eventVer => {\n                    eventVersions[eventVer[0]] = eventVer[1];\n                    eventKeys.push(eventVer[0])\n                })\n\n                fs.readFile(\"./data/commands.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemCommands = await data.filter(command => command != null && commandKeys.includes(command[\"_id\"]));\n\n                    for (i = 0; i < systemCommands.length; i++) {\n                        var systemActionFind = await systemCommands[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemActionFind.length != 0) {\n                            var versionCheckSplit = systemActionFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit[1] != null && versionCheckSplit[1] != commandVersions[systemCommands[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Giveaway Rewritten] The command ${systemCommands[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n\n                fs.readFile(\"./data/events.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemEvent = await data.filter(event => event != null && eventKeys.includes(event[\"_id\"]));\n\n                    for (i = 0; i < systemEvent.length; i++) {\n                        var systemEventFind = await systemEvent[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemEventFind.length != 0) {\n                            var versionCheckSplit = systemEventFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit != null && versionCheckSplit[versionCheckSplit.length - 1] != eventVersions[systemEvent[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Giveaway Rewritten] The event ${systemEvent[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n            }\n        });\n    }\n\n    if (globalVars(\"giveawaySystemMoved\") == null) {\n        Files.saveGlobalVariable(\"giveawaySystemMoved\", true);\n\n        if (!fs.existsSync(`./data/giveawaySystem`)) {\n            fs.mkdirSync(`./data/giveawaySystem`);\n        }\n\n        [\"giveawayData\"].forEach(fileName => {\n            if (fs.existsSync(`./data/${fileName}.json`)) {\n                fs.renameSync( `./data/${fileName}.json`, `./data/giveawaySystem/${fileName}.json`);\n            }\n        });\n    }\n\n    if (!fs.existsSync('./data/giveawaySystem/giveawayData.json')) {\n        fs.writeFile(\"./data/giveawaySystem/giveawayData.json\", \"{}\", function(err) {\n            if (err) {\n                return console.log(err);\n            }\n            \n            Actions.giveawaySystem = {};\n        });\n    } else {\n        fs.readFile('./data/giveawaySystem/giveawayData.json', async function read(err, data) {\n            if (err) {\n                throw err;\n            }\n\n            Actions.giveawaySystem = JSON.parse(data);\n        })\n    }\n}\n\n// VersionCheck:2","storage":"0","varName":"","name":"Run Script"}]},{"name":"MemberVoiceUpdate","temp":"prior","event-type":"22","_id":"PfnRH","actions":[{"code":"const joinChannel = serverVars(\"createVoice\");\nif (joinChannel) {\n    if (me.permissions.has('MOVE_MEMBERS')) {\n        if (me.permissions.has('MANAGE_CHANNELS')) {\n            const server = tempVars('after').guild;\n            const newUserChannel_id = tempVars(\"after\").channelID;\n            const oldUserChannel_id = tempVars(\"prior\").channelID;\n            const newUserChannel = server.channels.cache.get(newUserChannel_id);\n            const oldUserChannel = server.channels.cache.get(oldUserChannel_id);\n            const TheUser = server.members.cache.get(tempVars('after').id)\n            const parent_ID = joinChannel.parentID;\n            const Vname = TheUser.displayName + \"🔊\";\n            const options = {\n                type: 'voice',\n                parent: parent_ID,\n                permissionOverwrites: [{\n                    id: server.id,\n                    allow: ['CONNECT']\n                }, {\n                    id: TheUser.id,\n                    allow: ['CONNECT', 'MANAGE_CHANNELS']\n                }]\n            };\n\n            if (newUserChannel == joinChannel) {\n                if (oldUserChannel && oldUserChannel.name == Vname) {\n                    oldUserChannel.delete();\n                    server.channels.create(Vname, options)\n                        .then(function (channel) {\n                            TheUser.voice.setChannel(channel);\n                        }.bind(this))\n                        .catch(this.displayError.bind(this));\n                } else {\n                    server.channels.create(Vname, options)\n                        .then(function (channel) {\n                            TheUser.voice.setChannel(channel);\n                        }.bind(this))\n                        .catch(this.displayError.bind(this));\n                }\n            } else if (oldUserChannel && oldUserChannel !== joinChannel && oldUserChannel.name == Vname) {\n                oldUserChannel.delete();\n            } else if (oldUserChannel && oldUserChannel !== joinChannel && oldUserChannel.name.includes('-private')) {\n                oldUserChannel.delete();\n            }\n        } else {\n            console.log('The bot is missing MANAGE_CHANNELS permission.');\n        }\n    } else {\n        console.log('The bot is missing MOVE_MEMBERS permission.');\n    }\n}","behavior":"0","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"}],"temp2":"after"},{"name":"Statystyki ","temp":"600","event-type":"3","_id":"NPptc","actions":[{"server":"0","varName":"","info":"35","storage":"1","varName2":"osoby","name":"Store Server Info"},{"info":"0","find":"746476830638211072","storage":"1","varName":"kanal","name":"Find Voice Channel"},{"time":"5","measurement":"1","name":"Wait"},{"storage":"3","varName":"kanal","channelType":"1","toChange":"0","newState":"🎉Jest nas: ${tempVars(\"osoby\")}!","name":"Edit Channel"},{"server":"0","varName":"","info":"27","storage":"1","varName2":"online","name":"Store Server Info"},{"server":"0","varName":"","info":"30","storage":"1","varName2":"bottty","name":"Store Server Info"},{"FirstNumber":"${tempVars(\"online\")}","info":"1","SecondNumber":"${tempVars(\"bottty\")}","storage":"1","varName":"onnnnlinee","name":"Basic Math Operation"},{"info":"0","find":"746476882240733284","storage":"1","varName":"kanalonline","name":"Find Voice Channel"},{"time":"5","measurement":"1","name":"Wait"},{"storage":"3","varName":"kanalonline","channelType":"1","toChange":"0","newState":"🟢Online: ${tempVars(\"onnnnlinee\")}!","name":"Edit Channel"},{"server":"0","varName":"","info":"41","storage":"1","varName2":"bany","name":"Store Server Info"},{"list":"7","varName":"bany","storage":"1","varName2":"banylist","name":"Get List Length"},{"info":"0","find":"746476909059244183","storage":"1","varName":"kanalbany","name":"Find Voice Channel"},{"time":"5","measurement":"1","name":"Wait"},{"storage":"3","varName":"kanalbany","channelType":"1","toChange":"0","newState":"❌Bany: ${tempVars(\"banylist\")}!","name":"Edit Channel"}]}]